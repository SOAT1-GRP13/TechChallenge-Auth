name: Publish

on:
 push:
   branches:
     - main

jobs:
 build-and-push:
   runs-on: ubuntu-latest
   outputs:
     VERSION: ${{ steps.get-version.outputs.version }}

   steps:
   - name: Checkout code

     uses: actions/checkout@v2

   - name: Get version from URL
     id: get-version
     run: echo "::set-output name=version::$(curl -s https://devcm.com.br/versao/?projeto=TechChallenge-Auth)"

   - name: Set up version
     run: echo "VERSION=${{ steps.get-version.outputs.version }}" >> $GITHUB_ENV

   - name: Login to Docker Hub
     run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

   - name: Build Docker image
     run: docker build -t christiandmelo/tech-challenge-soat1-grp13-auth:${{ env.VERSION }} .

   - name: Push Docker image
     run: docker push christiandmelo/tech-challenge-soat1-grp13-auth:${{ env.VERSION }}

 update-service:
   runs-on: ubuntu-latest
   needs: build-and-push

   steps:

   - name: Checkout code
     uses: actions/checkout@v2

   - name: Configure AWS Credentials
     uses: aws-actions/configure-aws-credentials@v1-node16
     with:
       aws-region: us-west-2
       aws-access-key-id: ${{ secrets.ACCESS_KEY }}
       aws-secret-access-key: ${{ secrets.SECRET_KEY }}

   - name: Fill in the new image ID in the Amazon ECS task definition
     id: task-def
     env:
       VERSION: ${{needs.build-and-push.outputs.VERSION}}
     uses: aws-actions/amazon-ecs-render-task-definition@v1
     with:
       task-definition: deploy/task-definition.json
       container-name: auth-api
       image: christiandmelo/tech-challenge-soat1-grp13-auth:${{ env.VERSION }}
   
   - name: Deploy Amazon ECS task definition
     uses: aws-actions/amazon-ecs-deploy-task-definition@v1
     with:
       task-definition: ${{ steps.task-def.outputs.task-definition }}
       service: auth-service
       cluster: soat1-grp13-tech-challenge
       wait-for-service-stability: true